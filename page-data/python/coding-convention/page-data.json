{"componentChunkName":"component---src-templates-blog-post-js","path":"/python/coding-convention/","result":{"data":{"site":{"siteMetadata":{"title":"Ulfrid_log","author":"[ulfrid]","siteUrl":"https://ulfrid.github.io","comment":{"disqusShortName":"ulfrid-github-io","utterances":""},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"1a435285-80c1-5d93-9e3c-4fa043447cf1","excerpt":"요즘 코드 리뷰를 하거나 코드를 쓰면서 많이 하는 생각중 하나가 코딩 컨벤션을 확립하는 것에 있다. 코드 컨벤션 아직까지 많은 코딩 경험이 없다보니, 그때 그때 코드를 쓰는 방법이 바뀐다. 규칙을 만들고 변하지 않도록 지속적으로 유지하려고 노력해야한다.(심지어 코드카타를 하더라도) 그리하여 내가 가장 잘 실수 하는 것들을 요약하는 시간을 가져보기로 했다. 1. 클래스 아래 함수의 시작시 한칸 띄우기(new line) 2. 클래스 아래 함수에 데코레이터가 존재하면 붙이기 3. if 나 else…","html":"<p><img src=\"https://onsil-thegreenhouse.github.io/assets/images//programming/django/python-django-logo.jpg\"></p>\n<h2 id=\"요즘-코드-리뷰를-하거나-코드를-쓰면서-많이-하는-생각중-하나가-코딩-컨벤션을-확립하는-것에-있다\"><a href=\"#%EC%9A%94%EC%A6%98-%EC%BD%94%EB%93%9C-%EB%A6%AC%EB%B7%B0%EB%A5%BC-%ED%95%98%EA%B1%B0%EB%82%98-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%93%B0%EB%A9%B4%EC%84%9C-%EB%A7%8E%EC%9D%B4-%ED%95%98%EB%8A%94-%EC%83%9D%EA%B0%81%EC%A4%91-%ED%95%98%EB%82%98%EA%B0%80-%EC%BD%94%EB%94%A9-%EC%BB%A8%EB%B2%A4%EC%85%98%EC%9D%84-%ED%99%95%EB%A6%BD%ED%95%98%EB%8A%94-%EA%B2%83%EC%97%90-%EC%9E%88%EB%8B%A4\" aria-label=\"요즘 코드 리뷰를 하거나 코드를 쓰면서 많이 하는 생각중 하나가 코딩 컨벤션을 확립하는 것에 있다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요즘 코드 리뷰를 하거나 코드를 쓰면서 많이 하는 생각중 하나가 코딩 컨벤션을 확립하는 것에 있다.</h2>\n<h1 id=\"코드-컨벤션\"><a href=\"#%EC%BD%94%EB%93%9C-%EC%BB%A8%EB%B2%A4%EC%85%98\" aria-label=\"코드 컨벤션 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 컨벤션</h1>\n<ul>\n<li>아직까지 많은 코딩 경험이 없다보니, 그때 그때 코드를 쓰는 방법이 바뀐다.</li>\n<li>규칙을 만들고 변하지 않도록 지속적으로 유지하려고 노력해야한다.(심지어 코드카타를 하더라도)</li>\n<li>그리하여 내가 가장 잘 실수 하는 것들을 요약하는 시간을 가져보기로 했다.</li>\n</ul>\n<h3 id=\"1-클래스-아래-함수의-시작시-한칸-띄우기new-line\"><a href=\"#1-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%95%84%EB%9E%98-%ED%95%A8%EC%88%98%EC%9D%98-%EC%8B%9C%EC%9E%91%EC%8B%9C-%ED%95%9C%EC%B9%B8-%EB%9D%84%EC%9A%B0%EA%B8%B0new-line\" aria-label=\"1 클래스 아래 함수의 시작시 한칸 띄우기new line permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 클래스 아래 함수의 시작시 한칸 띄우기(new line)</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Category</span><span class=\"token punctuation\">(</span>View<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n <span class=\"token number\">13</span>\n <span class=\"token number\">14</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n <span class=\"token number\">15</span>         category_list <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>Categories<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"2-클래스-아래-함수에-데코레이터가-존재하면-붙이기\"><a href=\"#2-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%95%84%EB%9E%98-%ED%95%A8%EC%88%98%EC%97%90-%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0%EA%B0%80-%EC%A1%B4%EC%9E%AC%ED%95%98%EB%A9%B4-%EB%B6%99%EC%9D%B4%EA%B8%B0\" aria-label=\"2 클래스 아래 함수에 데코레이터가 존재하면 붙이기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 클래스 아래 함수에 데코레이터가 존재하면 붙이기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">AdminList</span><span class=\"token punctuation\">(</span>View<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token number\">31</span>     @login_required\n<span class=\"token number\">32</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token number\">33</span>         admin <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span>request<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"3-if-나-else-가-시작되면-new-line\"><a href=\"#3-if-%EB%82%98-else-%EA%B0%80-%EC%8B%9C%EC%9E%91%EB%90%98%EB%A9%B4-new-line\" aria-label=\"3 if 나 else 가 시작되면 new line permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. if 나 else 가 시작되면 (new line)</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">33</span>   admin <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span>request<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">34</span>\n<span class=\"token number\">35</span>         <span class=\"token keyword\">if</span> admin<span class=\"token punctuation\">.</span>is_admin<span class=\"token punctuation\">:</span></code></pre></div>\n<h3 id=\"4-return-에-장문이-올경우\"><a href=\"#4-return-%EC%97%90-%EC%9E%A5%EB%AC%B8%EC%9D%B4-%EC%98%AC%EA%B2%BD%EC%9A%B0\" aria-label=\"4 return 에 장문이 올경우 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. return ()에 장문이 올경우.</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"> <span class=\"token number\">41</span>             <span class=\"token keyword\">return</span> JsonResponse<span class=\"token punctuation\">(</span>\n <span class=\"token number\">42</span>                 <span class=\"token punctuation\">{</span><span class=\"token string\">\"message\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"관리자 외에는 접근할 수 없습니다.\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"error_code\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"NOT_ADMIN\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n <span class=\"token number\">43</span>                 status<span class=\"token operator\">=</span><span class=\"token number\">401</span>\n <span class=\"token number\">44</span>             <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"5-indent-잘지키기\"><a href=\"#5-indent-%EC%9E%98%EC%A7%80%ED%82%A4%EA%B8%B0\" aria-label=\"5 indent 잘지키기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. indent 잘지키기.</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">1</span> <span class=\"token keyword\">return</span> aaaaa<span class=\"token punctuation\">(</span>\n      abcd<span class=\"token punctuation\">,</span>\n          efgh<span class=\"token punctuation\">,</span>\n      ijkl<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span></code></pre></div>\n<p>위와 같이해도 문제는 없을 테지만, 보기에 좋지 않다.</p>\n<h3 id=\"6-불린형boolean의-값을-조건문에서-를-통해-비교하지-마세요\"><a href=\"#6-%EB%B6%88%EB%A6%B0%ED%98%95boolean%EC%9D%98-%EA%B0%92%EC%9D%84-%EC%A1%B0%EA%B1%B4%EB%AC%B8%EC%97%90%EC%84%9C-%EB%A5%BC-%ED%86%B5%ED%95%B4-%EB%B9%84%EA%B5%90%ED%95%98%EC%A7%80-%EB%A7%88%EC%84%B8%EC%9A%94\" aria-label=\"6 불린형boolean의 값을 조건문에서 를 통해 비교하지 마세요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 불린형(boolean)의 값을 조건문에서 ==를 통해 비교하지 마세요.</h3>\n<h3 id=\"7-기타-찾아본-규칙\"><a href=\"#7-%EA%B8%B0%ED%83%80-%EC%B0%BE%EC%95%84%EB%B3%B8-%EA%B7%9C%EC%B9%99\" aria-label=\"7 기타 찾아본 규칙 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 기타 찾아본 규칙</h3>\n<ul>\n<li>들여쓰기는 공백 4칸을 권장합니다.</li>\n<li>한 줄은 최대 79자까지</li>\n<li>최상위(top-level) 함수와 클래스 정의는 2줄씩 띄어 씁니다.</li>\n<li>클래스 내의 메소드 정의는 1줄씩 띄어 씁니다.</li>\n<li>대괄호([])와 소괄호(())안</li>\n<li>쉼표(,), 쌍점(:)과 쌍반점(;) 앞</li>\n<li>키워드 인자(keyword argument)와 인자의 기본값(default parameter value)의 = 는 붙여 씁니다.</li>\n<li>코드와 모순되는 주석은 없느니만 못합니다. 항상 코드에 따라 갱신해야 합니다.</li>\n<li>불필요한 주석은 달지 마세요.</li>\n<li>한 줄 주석은 신중히 다세요.</li>\n<li>문서화 문자열(Docstring)에 대한 컨벤션은 PEP 257을 참고하세요.</li>\n<li>언뜻 보면 잘 이해가 안 가는 규칙은 이런 것도 있습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">  Yes<span class=\"token punctuation\">:</span> <span class=\"token keyword\">import</span> os\n       <span class=\"token keyword\">import</span> sys\n  No<span class=\"token punctuation\">:</span>  <span class=\"token keyword\">import</span> sys<span class=\"token punctuation\">,</span> os</code></pre></div>\n<p>굳이 한 줄씩 내려쓰면 길어지기만 하고 보기 안 좋지 않을까요? 하지만 이 역시 대부분의 변경 추적 도구가 행 기반임을 고려하면 그렇지 않습니다.</p>\n<h3 id=\"마지막으로-네이밍-규칙\"><a href=\"#%EB%A7%88%EC%A7%80%EB%A7%89%EC%9C%BC%EB%A1%9C-%EB%84%A4%EC%9D%B4%EB%B0%8D-%EA%B7%9C%EC%B9%99\" aria-label=\"마지막으로 네이밍 규칙 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마지막으로 네이밍 규칙</h3>\n<ul>\n<li>\n<p>변수명에서 _(밑줄)은 위치에 따라 다음과 같은 의미가 있습니다.</p>\n<p><em>single</em>leading<em>underscore: 내부적으로 사용되는 변수를 일컫습니다.<br>\nsingle</em>trailing<em>underscore</em>: 파이썬 기본 키워드와 충돌을 피하려고 사용합니다.<br>\n<strong>double<em>leading</em>underscore: 클래스 속성으로 사용되면 그 이름을 변경합니다. (ex. FooBar에 정의된 **boo는 _FooBar</strong>boo로\n바뀝니다.)<br>\n**double<em>leading</em>and<em>trailing</em>underscore__: 마술(magic)을 부리는 용도로 사용되거나 사용자가 조정할 수 있는 네임스페이스 안의 속성을 뜻합니다. 이런 이름을 새로 만들지 마시고 오직 문서대로만 사용하세요.</p>\n</li>\n<li>소문자 L, 대문자 O, 대문자 I는 변수명으로 사용하지 마세요. 어떤 폰트에서는 가독성이 굉장히 안 좋습니다.</li>\n<li>모듈(Module) 명은 짧은 소문자로 구성되며 필요하다면 밑줄로 나눕니다.</li>\n<li>모듈은 파이썬 파일(.py)에 대응하기 때문에 파일 시스템의 영향을 받으니 주의하세요.\nC/C++ 확장 모듈은 밑줄로 시작합니다.</li>\n<li>클래스 명은 카멜케이스(CamelCase)로 작성합니다.\n내부적으로 쓰이면 밑줄을 앞에 붙입니다.\n예외(Exception)는 실제로 에러인 경우엔 “Error”를 뒤에 붙입니다.</li>\n<li>함수명은 소문자로 구성하되 필요하면 밑줄로 나눕니다.\n대소문자 혼용은 이미 흔하게 사용되는 부분에 대해서만 하위호환을 위해 허용합니다.</li>\n<li>인스턴스 메소드의 첫 번째 인자는 언제나 self입니다.</li>\n<li>클래스 메소드의 첫 번째 인자는 언제나 cls입니다.</li>\n<li>메소드명은 함수명과 같으나 비공개(non-public) 메소드, 혹은 변수면 밑줄을 앞에 붙입니다.</li>\n<li>서브 클래스(sub-class)의 이름충돌을 막기 위해서는 밑줄 2개를 앞에 붙입니다.</li>\n<li>상수(Constant)는 모듈 단위에서만 정의하며 모두 대문자에 필요하다면 밑줄로 나눕니다.</li>\n</ul>\n<p>참고내용\n스포카 기술블로그 <a href=\"https://spoqa.github.io/2012/08/03/about-python-coding-convention.html\">https://spoqa.github.io/2012/08/03/about-python-coding-convention.html</a></p>","frontmatter":{"title":"코드 컨벤션의 중요성","date":"November 07, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/python/coding-convention/","previous":{"fields":{"slug":"/python/Django-it/"},"frontmatter":{"title":"장고 그놈 참...","category":"python"}},"next":{"fields":{"slug":"/python/fluent-python-정리하기/"},"frontmatter":{"title":"Fluent Python 정리하기","category":"python"}}}}}