{"componentChunkName":"component---src-templates-blog-post-js","path":"/python/2019-06-14---python-settings/","result":{"data":{"site":{"siteMetadata":{"title":"Ulfrid_log","author":"[ulfrid]","siteUrl":"https://ulfrid.github.io","comment":{"disqusShortName":"ulfrid-github-io","utterances":""},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"d896ed58-e373-55a0-901a-3683895a5f52","excerpt":"…","html":"<p><img src=\"/media/python.png\"></p>\n<h2 id=\"파이썬-설치-및-환경-설정하기\"><a href=\"#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%84%A4%EC%B9%98-%EB%B0%8F-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"파이썬 설치 및 환경 설정하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이썬 설치 및 환경 설정하기</h2>\n<p><strong>세가지 환경에서 주로 파이썬을 사용중인데, 사실 검색해보면 여러가지 자료가 많으므로, 간략히 정리 해보겠습니다. .</strong></p>\n<ul>\n<li><code class=\"language-text\">CentOS</code>, <code class=\"language-text\">MacOS</code>, <code class=\"language-text\">Windows</code> 을 주로 사용중인데, 경험 해보지 않은 설치에 대한 부분은 거론하지 않는다.</li>\n<li><code class=\"language-text\">Windows</code>의 경우는 개별 설치도 할 수 있지만,<a href=\"https://www.anaconda.com/download/\"><code class=\"language-text\">Anaconda-Python</code></a>이 워낙 간편하고, 편리하므로 주로 이것을 사용했다.</li>\n<li><code class=\"language-text\">CentOS</code>의 경우는 기본으로 설치되는 <code class=\"language-text\">python 2.~</code>버전을 쓴다면 상관없겠지만, 대부분 요즘은 <code class=\"language-text\">python 3.~</code> 버전을 쓰기 때문에, <code class=\"language-text\">CentOS</code> 패키지 관리자인 <code class=\"language-text\">yum</code>에 레포지터리 추가 후 설치하는 방식도 있으나, 버전별 커스텀이 편한 직접 다운로드 설치 방식을 택했다. 예시는 아래와 같다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">  \n  yum <span class=\"token function\">install</span> gcc openssl-devel bzip2-devel\n\n  <span class=\"token builtin class-name\">cd</span> /usr/src\n  <span class=\"token function\">wget</span> https://www.python.org/ftp/python/3.7.~/Python-3.7.~.tgz \n  \n  <span class=\"token function\">tar</span> xzf Python-3.x.~.tgz\n\n  <span class=\"token builtin class-name\">cd</span> Python-3.x.~\n  ./configure --prefix<span class=\"token operator\">=</span>/usr/bin\n  <span class=\"token function\">make</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span>\n  \n  <span class=\"token function\">ln</span> -s /usr/bin/python3.6 /bin/python3\n  <span class=\"token comment\">#python3 로 실행 위한 링크 생성</span>\n\n  <span class=\"token function\">curl</span> <span class=\"token string\">\"https://bootstrap.pypa.io/get-pip.py\"</span> -o <span class=\"token string\">\"get-pip.py\"</span> \n  python3 get-pip.py \n  <span class=\"token comment\">#pip 설치하기</span></code></pre></div>\n<ul>\n<li>\n<p><code class=\"language-text\">MacOS</code>의 경우 homebrew설치를 통해 간편하게 설치가 가능하다.</p>\n<p><img src=\"/media/macOS_install.png\" alt=\"macOS\"></p>\n</li>\n<li>homebrew 설치가 안되어 있을때는 <a href=\"https://brew.sh/index_ko.html\">homebrew 설치 페이지 가기</a></li>\n</ul>","frontmatter":{"title":"Python 환경 설정 하기","date":"June 14, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/python/2019-06-14---python-settings/","previous":{"fields":{"slug":"/python/python/"},"frontmatter":{"title":"다시 Python3 정리","category":"python"}},"next":{"fields":{"slug":"/python/fluent-python-정리하기/"},"frontmatter":{"title":"Fluent Python 정리하기","category":"python"}}}}}